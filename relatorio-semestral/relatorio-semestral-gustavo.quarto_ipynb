{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "--- \n",
        "title: \"Relatório Semestral\"\n",
        "bibliography: references.bib\n",
        "csl: associacao-brasileira-de-normas-tecnicas.csl\n",
        "lang: pt\n",
        "\n",
        "authors:\n",
        "  - name: \"Orientando: Gustavo Silva Garone\"\n",
        "  - name: \"Orientadora: Elisabeti Kira\"\n",
        "\n",
        "date: last-modified\n",
        "date-format: long\n",
        "format:\n",
        "  pdf:\n",
        "    documentclass: article\n",
        "    fontsize: 12pt\n",
        "    monofont: \"Consolas\"\n",
        "    geometry:\n",
        "      - top=30mm\n",
        "      - left=30mm\n",
        "      - bottom=20mm\n",
        "      - right=20mm\n",
        "    number-sections: true\n",
        "    include-in-header:\n",
        "      text: |\n",
        "        \\usepackage{authblk}\n",
        "\n",
        "---\n",
        "\n",
        "\n",
        "# PASSEIO ALEATÓRIO: SIMULAÇÕES E AVALIAÇÃO DE NOVAS ABORDAGENS\n",
        "\n",
        "## Introdução\n",
        "\n",
        "Numa versão simples da original proposta por Pascal [@edwards_pascals_1983], dois jogadores, A e B,\n",
        "competem apostando no lançamento de uma moeda honesta. Ao ganhar a aposta, o jogador A recebe um real\n",
        "do jogador B e vice-versa. Além da questão proposta por Pascal sobre a\n",
        "probabilidade do jogador ir à ruína, ou seja, perder todo seu dinheiro, dado que começou com uma quantia $a$, também\n",
        "foram estudados o tempo esperado de duração do jogo [@stern_conditional_1975] e, pelo cálculo de equações de diferenças\n",
        "finitas, a variância dessa duração [@andel_variance_2012]. Todavia, os resultados obtidos por esses autores funcionam apenas\n",
        "para ganho e perda de um real por aposta. \n",
        "\n",
        "Neste projeto conjunto com Eduardo Ishihara, analisamos um estimador proposto por este para\n",
        "passeios aleatórios com regras mais complexas de ganho e perda através do emprego dessas simulações. \n",
        "A descrição desses passeios e de suas diferenças quando comparados a uma forma simples do problema\n",
        "clássico da Ruína do Jogador será apresentada ao longo do corpo do texto.\n",
        "\n",
        "Para isto, empregamos o método de Monte Carlo. A Simulação de Monte Carlo é uma técnica baseada em amostragem aleatória\n",
        "para emular sistemas complexos, normalmente por meios computacionais [@harrison_introduction_2010].\n",
        "Dessa forma, é útil no estudo do comportamento de passeios aleatórios com parâmetros diversos. Sendo assim,\n",
        "foi crucial na avalição do estimador proposto uma vez que, como elaborado por Ishihara, replicar as técnicas e cálculos para jogos\n",
        "mais complexos nem sempre é possível.\n",
        "\n",
        "## Atividades Desenvolvidas\n",
        "\n",
        "### Descrevendo jogos\n",
        "\n",
        "No problema da Ruína do Jogador, além do valor inicial $a$ do primeiro jogador e o dinheiro total em aposta $N$, podemos\n",
        "empregar uma variável aleatória $X$ para descrever o ganho e perda em cada jogada ao longo do processo estocástico\n",
        "no tempo discreto $T$. Logo\n",
        "\n",
        "$$\n",
        "X = \\begin{cases}\n",
        "1, P(X=1) = p \\\\\n",
        "-1, P(X=-1) = 1-p = q\n",
        "\\end{cases}\n",
        "$$\n",
        "\n",
        "Com essa variável aleatória de regras $X$, podemos\n",
        "obter resultados tratando da esperança da duração $T$ de jogos desse tipo em função de $a$ e $N$ [@stern_conditional_1975]\n",
        "\n",
        "$$\n",
        "\\begin{aligned}\n",
        "\\mu_{a,N} = E(T_{a,N}) = \\left\\{ \\begin{array}{cc}\n",
        "a(N - a) & \\mathbf{se}\\ p = q = 1/2, \\\\\n",
        "\\frac{a}{q - p} - \\frac{N}{q - p} \\left( \\frac{1 - (q/p)^a}{1 - (q/p)^N} \\right) & \\mathbf{se}\\ p \\neq q.\n",
        "\\end{array} \\right.\n",
        "\\end{aligned}\n",
        "$$ {#eq-original}\n",
        "\n",
        "Ao técnicas utilizadas para o desenvolvimento de  para outras formas de $X$ mais complexas - como com valores de ganho\n",
        "e perda diferentes de $1$, ou com mais valores possíveis - percebe-se que se torna inviável a resolução analítica de problemas desse tipo conforme a complexidade de $X$ aumenta. Portanto, foi proposto um estimador para avaliação atraveś de simulações de Monte Carlo.\n",
        "\n",
        "Descreveremos jogos (passeios) futuros em termos de $J = J(a,N,X)$, em que $a$ representa o valor inicial, $N$\n",
        "representa o valor da barreira superior (dinheiro em aposta) e $X$ a variável aleatória que contém as regras de ganho e\n",
        "perda do jogo.\n",
        "e buscaremos $\\mu_J = E(T_J)$ a esperança\n",
        "da duração do jogo $J$, com $X$ da forma genérica\n",
        "\n",
        "### Introdução do estimador\n",
        "\n",
        "O estimador sob avaliação é da seguinte forma\n",
        "$$\n",
        "\\widehat{E}(T_J) = \\left\\{ \\begin{array}{cc}\n",
        "\\frac{N-a}{E(X)} & \\mathbf{se}\\ E(X) > 0 \\\\\n",
        "\\left\\lvert\\frac{a}{E(X)}\\right\\rvert & \\mathbf{se}\\ E(X) < 0\n",
        "\\end{array}\\right.\n",
        "$$ {#eq-estimador}\n",
        "\n",
        "Consideraremos um passeio $J_{30,100,X}$, com ([-@eq-var-x])\n",
        "$$\n",
        "X = \\begin{cases}\n",
        "1, P(X=1) = 0.4 \\\\\n",
        "-1, P(X=-1) = 0.6\n",
        "\\end{cases}\n",
        "$$\n",
        "De ([-@eq-original]), temos que\n",
        "$$\n",
        "\\mu_J = \\frac{30}{0.2} - \\frac{100}{0.2} \\left( \\frac{1 - (0.6/0.4)^{30}}{1 - (0.6/0.4)^{100}} \\right) \\approx 150\n",
        "$$\n",
        "\n",
        "De ([-@eq-estimador]), como $E(X) = -0.2$, temos $\\widehat{E(T_J)} = \\frac{30}{0.2}=150$. O que condiz com o resultado téorico.\n",
        "\n",
        "#### Aplicações em casos com regras diferentes\n",
        "\n",
        "Passamos a estudar casos em que ([-@eq-original]) deixa de funcionar devido a uma maior complexidade de $X$.\n",
        "\n",
        "Um desses jogos foi uma simples variação do jogo anterior, $a = 30$ e $N=100$, mas fizemos o apostador ganhar\n",
        "dois por vitória, ainda perdendo apenas um por derrota. Nesse caso, temos nossa variável de regras $X$ \n",
        "$$\n",
        "X = \\begin{cases}\n",
        "2, P(X=2) = 0.4 \\\\\n",
        "-1, P(X=-1) = 0.6 \\\\\n",
        "\\end{cases}\n",
        "$$\n",
        "\n",
        "E o novo jogo $J_{30, 100, X}$\n",
        "\n",
        "Uma vez que ([-@eq-original]) não seria apropriada devido a nova forma de $X$, desenvolvemos algoritmos de simulação\n",
        "baseados no método de Monte Carlo para avaliarmos o estimador. A primeira versão do algoritmo,\n",
        "implementada em Python, não satisfez as demandas de tempo e complexidade que desejávamos. Para solucionar essa limitação, migramos\n",
        "para a linguagem Julia, com velocidade computacional competitiva com o C [@godoy_evaluating_2023], conhecida por sua alta eficiência\n",
        "característica da operação em baixo nível. Assim, conseguimos rodar um número maior de simulações em tempo razoável para melhorar a\n",
        "acurácia dos resultados [@ritter_determining_2011].\n",
        "\n",
        "Chamaremos de $\\bar{\\psi}_{M,J}$ a média das durações dos $M$ passeios $J$ simulados. Confere que\n",
        "$\\bar{\\psi}_{M,J}\\stackrel{M \\rightarrow \\infty}{\\rightarrow} \\mu_J$. Isto é, os valores simulados se aproximam\n",
        "da esperança de duração conforme o número de simulações $M$ cresce.\n",
        "\n",
        "Com esse recurso, $\\bar{\\psi}_{10000,J} \\approx 350$\n",
        "(veja o Apêndice A para o código dessa simulação assim como uma comparação entre as linguagens Julia e Python). \n",
        "\n",
        "Considerando que $E(X) = 0.2$, Aplicando o estimador ([-@eq-estimador]), temos que\n",
        "$$\n",
        "\\widehat{E}(T_J) = \\frac{70}{0.2} = 350\n",
        "$$\n",
        "\n",
        "o estimador sob diferentes regras e, na maioria dos casos, mostrou forte concordância com\n",
        "os valores simulados. Isso destaca a vantagem do estimador: estimar a duração de um jogo com regras\n",
        "diversas, o que, até onde encontramos na literatura, não foi descrito apenas com desenvolvimento analítico.\n",
        "\n",
        "| $E(X)$ | $\\widehat{E}(T_J)$ | $\\bar{\\psi}_{M,J}$ |\n",
        "|:------:|:------:|:------:|\n",
        "| $10$    | $12.5$    | $13.14$     |\n",
        "| $5$     | $25$      | $25.44$     |\n",
        "| $3$     | $50$      | $51.14$     |\n",
        "| $0.5$   | $100$     | $101.12$    |\n",
        "| $-3$    | $50$      | $51.14$     |\n",
        "| $-5$    | $16.66$   | $16.66$     |\n",
        "\n",
        "\n",
        ": Resultados de diferentes passeios com $a=50, N=100$ e $X$ variando {#tbl-simulados}\n",
        "\n",
        "Note que, como esperado, quanto menor $E(X)$, mais impreciso tende a ser o estimador,\n",
        "por $1$.\n"
      ],
      "id": "2191677d"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-env: figure\n",
        "#| fig-cap: Comparação entre o estimador e simulações $^{a = 10, N = 100, X = \\{+2, -1\\}, p \\textrm{ variando } 0.001 \\textrm{ em } (0,1)}$\n",
        "#| fig-cap-location: top\n",
        "using  Plots, LaTeXStrings, Random\n",
        "Random.seed!(2)\n",
        "x = [+2, -1]\n",
        "a = 30\n",
        "N = 100\n",
        "function estimador(p)\n",
        "  esp = x[1] * p + x[2] * (1-p)\n",
        "  if esp >= 0\n",
        "    return (N-a) / esp\n",
        "  else\n",
        "    return abs(a / esp)\n",
        "  end\n",
        "end\n",
        "\n",
        "function simulador(p)\n",
        "  M = 10000\n",
        "  duracoesSoma = 0\n",
        "  for i in 1:M  \n",
        "    saldo = a\n",
        "    duracao = 0\n",
        "    while saldo > 0 && saldo < N\n",
        "      if p > rand()\n",
        "        saldo += 2\n",
        "      else\n",
        "        saldo -= 1\n",
        "      end\n",
        "      duracao += 1\n",
        "    end\n",
        "    duracoesSoma += duracao\n",
        "  end\n",
        "  return duracoesSoma / M\n",
        "end\n",
        "\n",
        "function main()\n",
        "  simulados = [] \n",
        "  estimados = []\n",
        "  alcance = 0.001:0.001:0.999\n",
        "  for p in alcance\n",
        "    append!(simulados, simulador(p))\n",
        "    append!(estimados, estimador(p))\n",
        "  end\n",
        "  diferencas = abs.(simulados-estimados)\n",
        "\n",
        "  simulacoes = plot(alcance, simulados, label=\"\", ylabel=L\"\\bar{\\psi}_M\",\n",
        "                    title=\"Média dos passeios simulados\",\n",
        "                    ylim=(0,1.1 * maximum(simulados)))\n",
        "  vline!([0.34], label=L\"E(X)=0\")\n",
        "  estimacoes = plot(alcance, estimados, label=\"\", ylabel=L\"\\widehat{E}(T_a)\",\n",
        "                    title=\"Valor estimado\", ylim=(0, 1.3*maximum(simulados)))\n",
        "  vline!([0.34], label=L\"E(X)=0\")\n",
        "  diferenca = plot(alcance, diferencas, label=\"\", ylabel=L\"|\\widehat{E}(T_a)\" *\n",
        "                     L\" - \\bar{\\psi}_M|\", title=\"Diferença entre valor\" *\n",
        "                     \" estimado e simulado\", ylim=(0, 1.1*maximum(simulados)))\n",
        "  vline!([0.34], label=L\"E(X)=0\")\n",
        "  analise = plot(simulacoes, estimacoes, diferenca, xlabel=L\"p\",\n",
        "                 titlefontsize = 8, layout=(3,1),\n",
        "                 plot_title=LaTeXString(\n",
        "\"\\$^{a = 10, N = 100, X = \\\\{+2, -1\\\\}, p \\\\textrm{\\\\ variando\\\\ } 0.001 \\\\textrm{\\\\ em\\\\ } (0,1)}\\$\"),\n",
        "                 tickfont=6)\n",
        "  display(analise)\n",
        "end\n",
        "main()"
      ],
      "id": "6771fbd1",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Estes gráficos ilustram essa inacurácia conforme $E(X)$ se aproxima de $0$ para um jogo com outras regras fixadas. Isto é\n",
        "restrições do uso do estimador residem nas regras que levam a $E(X)$ próximo de $0$, uma vez que, conforme $E(X)$\n",
        "se aproxima de $0$, sua presença no denominador provoca divergências quando comparado com o valor simulado.\n",
        "\n",
        "Estudamos também como simplificar a variável aleatória de regras $X$ através de médias quando esta pode assumir mais\n",
        "que dois valores.\n",
        "\n",
        "\n",
        "## Conclusão e Passos Seguintes\n",
        "\n",
        "Os resultados obtidos indicam que o estimador proposto possui grande flexibilidade para diferentes configurações do jogo\n",
        "e mostra-se especialmente útil, pois as técnicas atuais não são capazes de fornecer um resultado teórico exato para as\n",
        "configurações de jogos propostas. Ademais, o estimador fornece estimativas mais precisas quando há maior circulação de\n",
        "dinheiro entre os jogadores. No entanto, observamos que o estimador tende a divergir rapidamente dos resultados simulados\n",
        "quando a esperança da variável aleatória que rege as regras do jogo aproxima-se de zero devido ao denominador.\n",
        "\n",
        "Outro desafio identificado foi a complexidade computacional envolvida na simulação de jogos com muitas regras, isto é,\n",
        "quando a variável aleatória pode assumir um grande número de valores. Essa limitação impõe a necessidade de soluções mais\n",
        "eficientes para lidar com cenários de alta complexidade, o que será um obstáculo a ser superado no estudo do caso não\n",
        "homogêneo.\n",
        "\n",
        "Um interessante caminho de abordagem que buscaremos explorar é a conexão entre passeios aleatórios e redes elétricas como descrito\n",
        "por @doyle_random_1984. Queremos descobrir se existem conexões entre o estimador proposto e fórmulas da física, além de outras\n",
        "abordagens para estudarmos passeios aleatórios, como o emprego de equações de diferenças finitas e o estudo de martingais para\n",
        "viabilização do estimador nesses casos.\n",
        "\n",
        "\n",
        "{{< pagebreak >}}\n",
        "\n",
        "\n",
        "## Bibliografia\n",
        "\n",
        "::: {#refs}\n",
        ":::\n",
        "\n",
        "\n",
        "{{< pagebreak >}}\n",
        "\n",
        "\n",
        "## Apêndice A - Comparação de um mesmo algoritmo em Julia e Python {.appendix}\n",
        "\n",
        "Para validar nossa decisão de trocarmos de linguagem, comparamos o mesmo (ingênuo) algoritmo em Julia e Python que usamos\n",
        "para avaliarmos o estimador:\n",
        "\n",
        "### Julia\n"
      ],
      "id": "515be5d5"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "using  LaTeXStrings, Random\n",
        "\n",
        "function main()\n",
        "  Random.seed!(1)\n",
        "  duracoesSoma = 0\n",
        "  M = 1_000_000\n",
        "  p = 0.4\n",
        "  teto = 100\n",
        "  for i in 1:M\n",
        "    saldo = 30\n",
        "    duracao = 0\n",
        "    while saldo > 0 && saldo < teto\n",
        "      if p > rand()\n",
        "        saldo += 2\n",
        "      else\n",
        "        saldo -= 1\n",
        "      end\n",
        "      duracao += 1\n",
        "    end\n",
        "    duracoesSoma += duracao\n",
        "  end\n",
        "  display(LaTeXString(\"Média da duração de \\$$M\\$ passeios:\n",
        "                      \\$$(round(duracoesSoma/M, digits = 2))\\$\"))\n",
        "end\n",
        "\n",
        "tempo = @elapsed main()\n",
        "display(LaTeXString(\"Tempo de execução em segundos: $tempo\"))"
      ],
      "id": "63dc9659",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "{{< pagebreak >}}\n",
        "\n",
        "\n",
        "### Python\n",
        "\n",
        "```python\n",
        "import random\n",
        "import time\n",
        "\n",
        "\n",
        "def main():\n",
        "    random.seed(1)\n",
        "    duracoes = 0\n",
        "    M = 1_000_000\n",
        "    p = 0.4\n",
        "    teto = 100\n",
        "    for i in range(M):\n",
        "        saldo = 30\n",
        "        duracao = 0\n",
        "        while saldo > 0 and saldo < teto:\n",
        "            if p > random.random():\n",
        "                saldo += 2\n",
        "            else:\n",
        "                saldo -= 1\n",
        "            duracao += 1\n",
        "        duracoes += duracao\n",
        "    media = duracoes / M\n",
        "    print(f\"Média da duração de {M} passeios: {media:.2f}\")\n",
        "  \n",
        "\n",
        "start_time = time.time()\n",
        "main()\n",
        "print(f\"Tempo de execução: {time.time() - start_time} segundos\")\n",
        "```\n"
      ],
      "id": "8f4d6e60"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "\n",
        "using PyCall, LaTeXStrings\n",
        "\n",
        "py\"\"\"\n",
        "def simulacao_py():\n",
        "  import random\n",
        "  import time\n",
        "\n",
        "  def main():\n",
        "      random.seed(1)\n",
        "      duracoes = 0\n",
        "      M = 1000000\n",
        "      p = 0.4\n",
        "      teto = 100\n",
        "      for i in range(M):\n",
        "          saldo = 30\n",
        "          duracao = 0\n",
        "          while saldo > 0 and saldo < teto:\n",
        "              if p > random.random():\n",
        "                  saldo += 2\n",
        "              else:\n",
        "                  saldo -= 1\n",
        "              duracao += 1\n",
        "          duracoes += duracao\n",
        "      return duracoes / M\n",
        "      # print(f\"Média da duração de {M} passeios: {media:.2f}\")\n",
        "    \n",
        "\n",
        "  start_time = time.time()\n",
        "  return main()\n",
        "  # print(f\"Tempo de execução: {time.time() - start_time} segundos\")\n",
        "\"\"\"\n",
        "a = @elapsed media = py\"simulacao_py\"()\n",
        "display(LaTeXString(\"Média da duração de \\$1000000\\$ passeios: \\$$(round(media, digits=2))\\$\"))\n",
        "display(LaTeXString(\"Tempo de execução: $a segundos\"))"
      ],
      "id": "17c90be5",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Para a simulação em Python nesse artigo, foi utilizado a biblioteca PyCall que nos permite criar um ambiente Python no Julia,\n",
        "possibilitando rodar código Python nessa linguagem o que foi necessário para inclusão de sua saída exata no relatório.\n",
        "A performance pode ter sido afetada minimamente nos tempos de chamada ao Kernel de execução do Python.\n",
        "\n",
        "### Decisão de mudança\n",
        "\n",
        "Desconsiderando o curto tempo de compilação do tempo total do código em Julia, que só precisa ser\n",
        "feito uma vez, temos que essa linguagem costuma ser considerávelmente mais rápida do que o Python, o que foi crucial nessas\n",
        "simulações e justificou nossas mudanças como previsto por resultados anteriores de @godoy_evaluating_2023\n",
        "\n",
        "## Apêndice B - Código de simulação com regras mais complexas\n"
      ],
      "id": "1e74a68b"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "using Random, LaTeXStrings\n",
        "\n",
        "function simulador(;a = 50, N = 100, X=[[1, 0.5],[-1, 0.5]], M=10_000, semente = nothing)\n",
        "  if !isnothing(semente)\n",
        "    Random.seed!(5)\n",
        "  end\n",
        "  duracoesSoma = 0\n",
        "\n",
        "  for i in 1:M\n",
        "    saldo = a\n",
        "    duracao = 0\n",
        "    while saldo > 0 && saldo < N\n",
        "      p = rand()\n",
        "      for x in X\n",
        "        p -= x[2]\n",
        "        if p < 0\n",
        "          saldo += x[1]\n",
        "          break\n",
        "        end\n",
        "      end\n",
        "      duracao += 1\n",
        "    end\n",
        "    duracoesSoma += duracao\n",
        "  end\n",
        "  display(LaTeXString(\"Média da duração de \\$$M\\$ passeios:\n",
        "                      \\$$(round(duracoesSoma/M, digits = 2))\\$\"))\n",
        "  return duracoesSoma / M\n",
        "end\n",
        "simulador(X=[[8, 0.6],[-2, 0.5]], semente = 1) # 4\n",
        "simulador(X=[[6, 0.5],[4, 0.25], [-8, 0.25]], semente = 2) # 2 \n",
        "simulador(X=[[2, 0.5],[6, 0.2], [-4, 0.3]], semente = 3) # 1\n",
        "simulador(X=[[1, 0.5],[3, 0.2], [-2, 0.3]], semente = 4) # 0.5\n",
        "simulador(X=[[-2, 0.5],[-6, 0.2], [4, 0.3]], semente = 5) # -1\n",
        "simulador(X=[[5, 0.2],[-5, 0.8]], semente = 6) # -3"
      ],
      "id": "acbfa7e8",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "julia-1.11",
      "language": "julia",
      "display_name": "Julia 1.11.2",
      "path": "/home/minze/.local/share/jupyter/kernels/julia-1.11"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}