{
  "hash": "4f6ca5029412bc9a8d41eeb62db62fb2",
  "result": {
    "engine": "julia",
    "markdown": "--- \ntitle: \"Aproximações para a duração de passeios aleatórios\"\nbibliography: references.bib\ncsl: associacao-brasileira-de-normas-tecnicas.csl\nlang: pt-BR\n\nauthors:\n  - name: \"Orientando: Gustavo Silva Garone\"\n  - name: \"Orientadora: Elisabeti Kira\"\n\nabstract: > \n            Inspirados na física, propusemos aproximações para a duração de\n            passeios aleatórios diversos, em especial, os de difícil derivação analítica.\n            Para testar as aproximações, utilizamos simulações de Monte Carlo na linguagem\n            Julia. Analisamos o desempenho desta linguagem comparando-a com a linguagem\n            Python. Com modelos (passeios) mais sofisticados, utilizamos recursos\n            computacionais para solução de sistemas lineares na construção de novas\n            aproximações. Descrevemos o uso de paralelismo e de outras ferramentas. Exibimos\n            e analisamos os resultados obtidos.\n\nkeywords:\n    - Monte Carlo\n    - Julia\n    - Estimação\ndate: last-modified\ndate-format: long\nformat:\n  pdf:\n    documentclass: article\n    fontsize: 12pt\n    monofont: \"Consolas\"\n    geometry:\n      - top=20mm\n      - left=20mm\n      - bottom=20mm\n      - right=20mm\n    number-sections: true\n    include-in-header:\n      text: |\n        \\usepackage{authblk}\n  html:\n    theme: cosmo\n  docx: default\n\nengine: julia\nexecute:\n  keep-ipynb: true\n  # eval: false\nfig-cap-location: top\n---\n\n# Introdução\n\nNeste artigo, estudaremos a duração de passeios aleatórios e suas aproximações.\nTemos como objetivo descrever modeleos de passeios como a \"Ruína do Jogador\" de\nPascal, discutido em @edwards_pascals_1983, genericamente.\n\n# Modelando paseios aleatórios\n\n:::{#def-modelodiscreto}\n\n## Modelo discreto\n\nSejam $\\pmb{V}$ um produto cartesiano em $\\mathbb{Z}^d$ de $d$ vetores de\ndimensões $d_1, d_2, \\dots d_d$ da forma $v_j =(0, 1, 2, \\dots, d_j)$, $j =\n1,2,\\ldots d$, $a$ em $\\mathbb{Z}^d$ um vetor $d$-dimensional e $\\mathbb{X} =\n\\{X_{v}\\}_{\\forall v \\in \\pmb{V}}$ um produto cartesiano de dimensão igual a\n$\\pmb{V}$ composto por vetores aleatórios de dimensão $d$ em $(\\Omega,\n\\mathscr{F}, P)$. A ênupla $(\\pmb{V}, a, \\mathbb{X})$ define um passeio\naleatório $J(\\pmb{V},a, \\mathbb{X})$ descrito pela sequência $\\{X_{S_0, 1},\nX_{S_1, 2}, \\dots X_{S_{t-1}, t}\\} = \\{X_{v, i}\\}{i\\geq1}$. Definem-se $S_n = a\n+\\sum^n_{i=1} X_{\\cdot, i}$ as posições do passeio no instante $i$ baseado no\ninício $a$ e $X_{v, i}$ as \"regras do jogo\" na posição $v = (v_1, v_2, \\dots,\nv_d)$ e instante $i$. Seja $\\tau = \\min\\{i : \\exists j \\in S_i \\leq 0 \\lor\n\\exists k \\in S_i \\geq d_j,\\ j = 1, 2, \\dots, d\\}$ a regra de parada do passeio.\n\n:::\n\n\n\n:::{#rem-uniforme} \nEm especial, se $X_{v, i} = X_{v', i}$ para todo\n$v \\neq v'$, dizemos que o passeio está em meio uniforme (uniforme no espaço).\nAnalogamente, se $X_{v, i} = X_{v, i'}$ para todo\n$i \\neq i'$, dizemos que o passeio é uniforme no tempo.\n\nSimplificaremos casos em meio uniforme escrevendo simplesmente $X_{i}$.\nNão trateremos de casos não uniformes no tempo neste artigo.\n:::\n\nPara ajudar no entendimento deste modelo , oferecemos um\nexemplo:\n\n:::{#exm-modelodiscreto}\n\n## Ruína do Jogador bidimensional\n\nConsidere um jogador apostando em um casino no lançamento de duas moedas\nhonestas. A primeira moeda define se apostará seus dólares ou seus euros. A\nsegunda moeda decide se ganhará ou perderá a jogada. No caso de derrota, deverá\ndeixar um dólar ou um euro com o casino, enquanto ganha essa quantidade no caso\nde sucesso em sua aposta. Terminará o jogo quando atingir cem dólares ou cem\neuros, ou caso vá à ruína (seu saldo chegue em zero em alguma das moedas). O\njogador começa com 50 dólares e 25 euros.\n\nPodemos modelar esse jogo no modelo da @def-modelodiscreto, utilizando da\nsimplificação do @rem-uniforme. Tome $\\pmb{V} = (v_1, v_2)$ com\n$v_1 = v_2 = (0, 1, \\dots, 100)$, $a = (50, 25)$ e\n\n$$\nX = \\begin{cases}\n(-1, 0), & 0.25 \\\\\n(0, -1), & 0.25 \\\\\n(1, 0), & 0.25 \\\\\n(0, 1), & 0.25.\n\\end{cases}\n$$\n\nNote que é o mesmo para todo tempo $i$ e todo estado $v$ enquanto o jogo durar.\n\nApós $5$ jogadas, o jogo tomou o seguinte percurso:\n$$\n\\begin{aligned}\nJ(\\pmb{V}, a, \\pmb{x}) &= \\{x_1, x_2, x_3, x_4, x_5\\} \\\\\n&= \\{(1,0), (-1, 0), (0, 1), (0, 1), (-1, 0)\\}.\n\\end{aligned}\n$$\n\n:::\n\nConforme a regra de parada $\\tau$, o jogo encerrar-se-á assim que um elemento de\n$S_n$ - isto é, uma moeda (dólar ou euro) - chegar em zero ou cem. No\n@exm-modelodiscreto, é fácil ver que o jogo ainda não acabou, pois $S_5 = (49,\n27)$.\n\nEstamos interessados na duração esperada do jogo, ou seja, queremos encontrar\n$E(\\tau)$. Abordaremos técnicas analíticas, computacionais e estimativas para\neste valor no restante deste artigo.\n\n\n# Aproximando durações de passeios aleatórios\n\nUma pergunta natural quando se discute aproximações é quanto sua utilidade. Se\npossível, é mais desejável utilizar resultados obtidos analiticamente, como, no\nexemplo da Ruína do Jogador clássica, os desenvolvidos em\n@stern_conditional_1975. Conforme os passeios (e os modelos) complicam-se, pode\nnão ser possível, ou ser muito difícil, obter uma derivação analítica de\n$E(\\tau)$.\n\n<!-- TOOD: ADICIONAR SESSÃO DO SISTEMA -->\nNos cenários em que não é prático o desenvolvimento analítico, soluções\ncomputacionais são buscadas. Estas soluções podem fornecer resultados teóricos\ncorretos, como na solução de sistemas lineares extensos que abordaremos na\n[SESSÃO AQUI], ou aproximações pelo método de Monte Carlo, como aborda\n@harrison_introduction_2010\n\n\n\n\n\n\n{{< pagebreak >}}\n\n# Referências\n\n:::{.refs}\n::::\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": []
  }
}