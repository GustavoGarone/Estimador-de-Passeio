
@book{ross_introduction_2019,
	title = {Introduction to Probability Models},
	isbn = {978-0-12-814347-6},
	url = {https://books.google.com.br/books?id=wGOMDwAAQBAJ},
	publisher = {Academic Press},
	author = {Ross, S.M.},
	date = {2019},
	file = {PDF:/home/minze/Zotero/storage/2CGAQ7XR/Ross - 2010 - Introduction to probability models.pdf:application/pdf},
}

@article{andel_variance_2012,
	title = {Variance of the game duration in the gambler’s ruin problem},
	volume = {82},
	issn = {0167-7152},
	url = {https://www.sciencedirect.com/science/article/pii/S0167715212001988},
	doi = {https://doi.org/10.1016/j.spl.2012.05.023},
	abstract = {We derive the variance of the duration of play in the classical gambler’s ruin problem of two players with ties allowed. The variance of the game duration for the three-tower problem, one of the possible extensions of the game for the case of three players, is presented as well.},
	pages = {1750--1754},
	number = {9},
	journaltitle = {Statistics \& Probability Letters},
	author = {Anděl, Jiří and Hudecová, Šárka},
	date = {2012},
	keywords = {Gambler’s ruin, Ruin problem, Three-tower problem},
}

@book{doyle_random_1984,
	title = {Random Walks and Electric Networks},
	isbn = {978-1-61444-022-2},
	abstract = {Probability theory, like much of mathematics, is indebted to physics as a source of problems and intuition for solving these problems. Unfortunately, the level of abstraction of current mathematics often makes it difficult for anyone but an expert to appreciate this fact. Random Walks and electric networks looks at the interplay of physics and mathematics in terms of an example—the relation between elementary electric network theory and random walks —where the mathematics involved is at the college level.},
	pagetotal = {174},
	publisher = {American Mathematical Soc.},
	author = {Doyle, Peter G. and Snell, J. Laurie},
	date = {1984-12-31},
	langid = {english},
	note = {Google-Books-{ID}: {FBezDwAAQBAJ}},
}

@article{harrison_introduction_2010,
	title = {Introduction To Monte Carlo Simulation},
	volume = {1204},
	issn = {0094-243X},
	url = {https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2924739/},
	doi = {10.1063/1.3295638},
	abstract = {This paper reviews the history and principles of Monte Carlo simulation, emphasizing techniques commonly used in the simulation of medical imaging.},
	pages = {17--21},
	journaltitle = {{AIP} conference proceedings},
	shortjournal = {{AIP} Conf Proc},
	author = {Harrison, Robert L.},
	urldate = {2025-02-14},
	date = {2010-01-05},
	pmid = {20733932},
	pmcid = {PMC2924739},
	file = {PubMed Central Full Text PDF:/home/minze/Zotero/storage/GQNRY9GC/Harrison - 2010 - Introduction To Monte Carlo Simulation.pdf:application/pdf},
}

@inproceedings{godoy_evaluating_2023,
	title = {Evaluating performance and portability of high-level programming models},
	url = {https://ieeexplore.ieee.org/abstract/document/10196600},
	doi = {10.1109/IPDPSW59300.2023.00068},
	shorttitle = {Evaluating performance and portability of high-level programming models},
	abstract = {We explore the performance and portability of the high-level programming models: the {LLVM}-based Julia and Python/Numba, and Kokkos on high-performance computing ({HPC}) nodes: {AMD} Epyc {CPUs} and {MI}250X graphical processing units ({GPUs}) on Frontier’s test bed Crusher system and Ampere’s Arm-based {CPUs} and {NVIDIA}’s A100 {GPUs} on the Wombat system at the Oak Ridge Leadership Computing Facilities. We compare the default performance of a hand-rolled dense matrix multiplication algorithm on {CPUs} against vendor-compiled C/{OpenMP} implementations, and on each {GPU} against {CUDA} and {HIP}. Rather than focusing on the kernel optimization per-se, we select this naive approach to resemble exploratory work in science and as a lower-bound for performance to isolate the effect of each programming model. Julia and Kokkos perform comparably with C/{OpenMP} on {CPUs}, while Julia implementations are competitive with {CUDA} and {HIP} on {GPUs}. Performance gaps are identified on {NVIDIA} A100 {GPUs} for Julia’s single precision and Kokkos, and for Python/Numba in all scenarios. We also comment on half-precision support, productivity, performance portability metrics, and platform readiness. We expect to contribute to the understanding and direction for high-level, high-productivity languages in {HPC} as the first-generation exascale systems are deployed.},
	author = {Godoy, William F. and others},
	urldate = {2025-02-14},
	date = {2023-05},
	keywords = {Biological system modeling, Ecosystems, Exascale, {GPU}, Graphics processing units, {HPC}, Julia, Kokkos, Leadership, {LLVM}, Measurement, {OpenMP}, Performance, Portability, Productivity, Programming, Python/Numba},
	file = {IEEE Xplore Abstract Record:/home/minze/Zotero/storage/4EJ3JFWG/10196600.html:text/html;Submitted Version:/home/minze/Zotero/storage/H44M8ZES/Godoy et al. - 2023 - Evaluating performance and portability of high-level programming models Julia, PythonNumba, and Ko.pdf:application/pdf},
}

@incollection{ritter_determining_2011,
	location = {London},
	title = {Determining the Number of Simulation Runs},
	isbn = {978-0-85729-883-6},
	url = {https://doi.org/10.1007/978-0-85729-883-6_5},
	shorttitle = {Determining the Number of Simulation Runs},
	abstract = {How many times should a simulation be run to generate valid predictions? With a deterministic simulation, the answer simply is just once. With a stochastic simulation, the answer is more complex. Different researchers have proposed and used different heuristics. A review of the models presented at a conference on cognitive modeling illustrates the range of solutions and problems in this area. We present the argument that because the simulation is a theory, not data, it should not so much be sampled but run enough times to provide stable predictions of performance and the variance of performance. This applies to both pure simulations as well as human-in-the-loop simulations. We demonstrate the importance of running the simulation until it has stable performance as defined by the effect size of interest. When runs are expensive we suggest a minimum number of runs based on power calculations; when runs are inexpensive we suggest a maximum necessary number of runs. We also suggest how to adjust the number of runs for different effect sizes of interest.},
	publisher = {Springer},
	author = {Ritter, Frank E. and others},
	urldate = {2025-02-14},
	date = {2011},
	langid = {english},
	doi = {10.1007/978-0-85729-883-6_5},
}

@article{stern_conditional_1975,
	title = {Conditional Expectation of the Duration in the Classical Ruin Problem},
	volume = {48},
	issn = {0025-570X},
	url = {https://doi.org/10.1080/0025570X.1975.11976486},
	doi = {10.1080/0025570X.1975.11976486},
	pages = {200--203},
	number = {4},
	journaltitle = {Mathematics Magazine},
	author = {Stern, Frederick},
	urldate = {2025-02-14},
	date = {1975-09-01},
	note = {Publisher: Taylor \& Francis
\_eprint: https://doi.org/10.1080/0025570X.1975.11976486},
}

@inbook{ross_markov_2019,
	title = {Markov Chain Monte Carlo Methods},
	isbn = {978-0-12-814347-6},
	url = {https://books.google.com.br/books?id=wGOMDwAAQBAJ},
	booktitle = {Introduction to Probability Models},
	publisher = {Academic Press},
	author = {Ross, S.M.},
	bookauthor = {Ross, S.M.},
	date = {2019},
}

@article{edwards_pascals_1983,
	title = {Pascal's Problem: The 'Gambler's Ruin'},
	volume = {51},
	issn = {0306-7734},
	url = {https://www.jstor.org/stable/1402732},
	doi = {10.2307/1402732},
	shorttitle = {Pascal's Problem},
	abstract = {It is not generally known that the 'Gambler's Ruin' problem was first posed, and first solved, by Pascal. The problem was very influential in the early history of probability because it raised questions of the duration of play. A suggestion is here made about how Pascal solved the problem, and how Fermat (to whom it was put) might also have done so. The solutions of Huygens, Hudde Bernoulli and Montmort are considered. /// On ignore généralement que le premier à poser et à résoudre le problème de la Ruine du Joueur, fut Pascal. Ce problème eut une grande influence sur le développement de la probabilité à ses débuts parce qu'ils soulevait le question de la durée du jeu. L'auteur spécule ici sur la manière dont Pascal aurait résolu le problème, ainsi que sur la manière que Fermat (à qui le problème fut posé) aurait pu le faire. L'auteur considère aussi les solutions dues à Huygens, Hudde, Bernoulli, et Montmort.},
	pages = {73--79},
	number = {1},
	journaltitle = {International Statistical Review / Revue Internationale de Statistique},
	author = {Edwards, A. W. F.},
	urldate = {2025-02-15},
	date = {1983},
	note = {Publisher: [Wiley, International Statistical Institute ({ISI})]},
}

@inbook{doyle_16_1984,
	title = {1.6 The Solution as a Fair Game (Martingale)},
	isbn = {978-1-61444-022-2},
	pages = {11--14},
	booktitle = {Random Walks and Electric Networks},
	publisher = {American Mathematical Soc.},
	bookauthor = {Doyle, Peter G. and Snell, J. Laurie},
	date = {1984-12-31},
	langid = {english},
	note = {Google-Books-{ID}: {FBezDwAAQBAJ}},
}

@report{ishihara_um_2025,
	location = {São Paulo},
	title = {Um Estimador para a Duração do Jogo da Ruína do Jogador},
	number = {1},
	institution = {Universidade de São Paulo},
	type = {Relatório semestral de iniciação científica},
	author = {Ishihara, Eduardo},
	date = {2025},
}
